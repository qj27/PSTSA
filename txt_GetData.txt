import re
import numpy as np
import linecache
import os
from scipy import sparse
import matplotlib.pyplot as plt
import math


#读取潮流数据
f = open("潮流.txt", "r", encoding='utf-8')
f_read = f.read()
#print(f_read)
f.close()
f = open("潮流.txt", "r", encoding='utf-8')
l=[]
for line in f:
    t=f.read(10)
    del(t)
    num = list(line.split())
    l.append(num)
del(l[0])
chaoliu=[]
i=0
while i<len(l):
    j=0
    p=[]
    while j<len(l[0]):
        p.append(float(l[i][j]))
        j+=1
    chaoliu.append(p)
    i+=1
print(chaoliu)
f.close()

#读取BUS.con母线数据【编号、基准电压、电压初始幅值猜测p.u.、电压初始相位猜测、区号、地区编号】
file= open("d_036.txt", "r", encoding='utf-8')
B=[]
a=file.readlines()[1:37]
for line in a:
    num=list(line.split())
    B.append(num)
BUS_data=[]
i=0
while i<len(B):
    j=0
    p=[]
    while j<len(B[0]):
        p.append(float(B[i][j]))
        j+=1
    BUS_data.append(p)
    i+=1
print(BUS_data)
file.close()

#读取line.con支路数据【起始线I侧、终点线J侧、额定功率、额定电压、额定频率、线长、无用、电阻p.u.、电抗p.u.、电纳p.u.、无用、无用、电流限幅p.u、有功限幅pu、视在功率限幅pu、连接状态】
file= open("d_036.txt", "r", encoding='utf-8')
C=[]
b=file.readlines()[40:82]
for line in b:
    num=list(line.split())
    C.append(num)
line_data=[]
i=0
while i<len(C):
    j=0
    p=[]
    while j<len(C[0]):
        p.append(float(C[i][j]))
        j+=1
    line_data.append(p)
    i+=1
print(line_data)
file.close()

#读取Shunt.con分流导纳数据格式[BUS号码、额定功率、额定电压、额定频率、电导率pu、电纳pu、连接状态0/1]
file= open("d_036.txt", "r", encoding='utf-8')
C=[]
b=file.readlines()[86:94]
for line in b:
    num=list(line.split())
    C.append(num)
Shunt_data=[]
i=0
while i<len(C):
    j=0
    p=[]
    while j<len(C[0]):
        p.append(float(C[i][j]))
        j+=1
    Shunt_data.append(p)
    i+=1
print(Shunt_data)
file.close()

#读取SW.con备用发电机数据【编号、额定功率、额定电压、电压幅值pu、参考角度pu、最大无功功率pu、最小无功功率pu、最大电压pu、最小电压pu、？、？】
file= open("d_036.txt", "r", encoding='utf-8')
C=[]
b=file.readlines()[97:98]
for line in b:
    num=list(line.split())
    C.append(num)
SW_data=[]
i=0
while i<len(C):
    j=0
    p=[]
    while j<len(C[0]):
        p.append(float(C[i][j]))
        j+=1
    SW_data.append(p)
    i+=1
print(SW_data)
file.close()

#读取PV.con【编号、额定功率、额定电压、有功功率pu、电压幅值pu、最大无功功率pu、最小无功功率pu、最大电压pu、最小电压pu、损失参与系数、连接状态】
file= open("d_036.txt", "r", encoding='utf-8')
C=[]
b=file.readlines()[101:108]
for line in b:
    num=list(line.split())
    C.append(num)
PV_data=[]
i=0
while i<len(C):
    j=0
    p=[]
    while j<len(C[0]):
        p.append(float(C[i][j]))
        j+=1
    PV_data.append(p)
    i+=1
print(PV_data)
file.close()

#读取Ind.con感应电机数据【编号、额定功率、额定电压、额定频率、moedl order、启动控制、定子电阻pu、定子电抗pu、第一笼转子电阻pu、第一笼转子电抗pu、第二笼转子电阻pu、第二笼转子电抗pu、磁化电抗KWs/kVA、惯性常数pu、a pu、b pu、c pu（Tm=a+b*w+c*w*w为机电时间常数）、开始时间、是否允许刹车、连接状态】】
file= open("d_036.txt", "r", encoding='utf-8')
C=[]
b=file.readlines()[119:120]
for line in b:
    num=list(line.split())
    C.append(num)
Ind_data=[]
i=0
while i<len(C):
    j=0
    p=[]
    while j<len(C[0]):
        p.append(float(C[i][j]))
        j+=1
    Ind_data.append(p)
    i+=1
print(Ind_data)
file.close()

#读取PQ.con【编号、额定功率、额定电压、有功功率pu、无功功率pu、最大电压pu、最小电压pu、是否允许转移为阻抗、连接状态】
file= open("d_036.txt", "r", encoding='utf-8')
C=[]
b=file.readlines()[123:132]
for line in b:
    num=list(line.split())
    C.append(num)
PQ_data=[]
i=0
while i<len(C):
    j=0
    p=[]
    while j<len(C[0]):
        p.append(float(C[i][j]))
        j+=1
    PQ_data.append(p)
    i+=1
print(PQ_data)
file.close()

#读取syn.con发电机【编号、Sn、Vn、fn、发电机模型、漏电抗、ra pu、xd pu、xd' pu、xd'' pu、Td0'、Td0''、xq pu、xq' pu、xq'' pu、Tq0'、Tq0''、M（M=2H）、D（阻尼系数）】
file= open("d_036.txt", "r", encoding='utf-8')
C=[]
b=file.readlines()[137:145]
for line in b:
    num=list(line.split())
    C.append(num)
syn_data=[]
i=0
while i<len(C):
    j=0
    p=[]
    while j<len(C[0]):
        p.append(float(C[i][j]))
        j+=1
    syn_data.append(p)
    i+=1
print(syn_data)
file.close()

#读取Exc.con [Generator_number, Type, vrmax最大调节电压 pu, vrmin pu, Ka放大器增益 pu, Ta, Kf稳定器增益 pu, Tf, Ke励磁回路积分偏差 pu, Te, Tr测量时间常数, Ae, Be, u]
file= open("d_036.txt", "r", encoding='utf-8')
C=[]
b=file.readlines()[150:157]
for line in b:
    num=list(line.split())
    C.append(num)
Exc_data=[]
i=0
while i<len(C):
    j=0
    p=[]
    while j<len(C[0]):
        p.append(float(C[i][j]))
        j+=1
    Exc_data.append(p)
    i+=1
print(Exc_data)
file.close()

#读取Tg.con涡轮调速器【编号、类型、参考速度p.u、下垂p.u、最大涡轮功率p.u、最小涡轮功率p.u、调速器时间常数s、私服时间常数、瞬态增益时间常数、功率分数时间常数、连接状态】
file= open("d_036.txt", "r", encoding='utf-8')
C=[]
b=file.readlines()[160:166]
for line in b:
    num=list(line.split())
    C.append(num)
Tg_data=[]
i=0
while i<len(C):
    j=0
    p=[]
    while j<len(C[0]):
        p.append(float(C[i][j]))
        j+=1
    Tg_data.append(p)
    i+=1
print(Tg_data)
file.close()

#读取Tcsc.con静止串联补偿器【Line number、Model type、操作模式、调度策略、额定功率、额定电压、额定频率、串联补偿百分比、调节器时间常数、最大电抗（发射角）、最小电抗（发射角）、PI控制器的比例增益 pu、PI控制器积分增益 pu、感性电抗 pu、容性电抗 pu、稳定信号的增益 pu、连接状态】
file= open("d_036.txt", "r", encoding='utf-8')
C=[]
b=file.readlines()[168:169]
for line in b:
    num=list(line.split())
    C.append(num)
Tcsc_data=[]
i=0
while i<len(C):
    j=0
    p=[]
    while j<len(C[0]):
        p.append(float(C[i][j]))
        j+=1
    Tcsc_data.append(p)
    i+=1
print(Tcsc_data)
file.close()

#读取Fault.con故障数据[Bus, Sn, Vn, fn, tf故障时间, tc清除时间, rf pu, xf pu]
file= open("d_036.txt", "r", encoding='utf-8')
C=[]
b=file.readlines()[173:174]
for line in b:
    num=list(line.split())
    C.append(num)
Fault_data=[]
i=0
while i<len(C):
    j=0
    p=[]
    while j<len(C[0]):
        p.append(float(C[i][j]))
        j+=1
    Fault_data.append(p)
    i+=1
print(Fault_data)
file.close()

#读取Breaker.con断路器数据[Line, Bus, Sn, Vn, fn, 连接状态, t1第一次干预时间, t2第二次干预时间, u1进行第一次干预, u2进行第二次干预]
file= open("d_036.txt", "r", encoding='utf-8')
C=[]
b=file.readlines()[178:179]
for line in b:
    num=list(line.split())
    C.append(num)
Breaker_data=[]
i=0
while i<len(C):
    j=0
    p=[]
    while j<len(C[0]):
        p.append(float(C[i][j]))
        j+=1
    Breaker_data.append(p)
    i+=1
print(Breaker_data)
file.close()

#读取Pss.con电力系统稳定器
file= open("d_036.txt", "r", encoding='utf-8')
C=[]
b=file.readlines()[182:186]
for line in b:
    num=list(line.split())
    C.append(num)
Pss_data=[]
i=0
while i<len(C):
    j=0
    p=[]
    while j<len(C[0]):
        p.append(float(C[i][j]))
        j+=1
    Pss_data.append(p)
    i+=1
print(Pss_data)
file.close()



